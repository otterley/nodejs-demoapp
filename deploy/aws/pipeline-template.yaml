AWSTemplateFormatVersion: '2010-09-09'
Description: Build pipeline for nodejs-demoapp

Resources:
  ArtifactBucket:
    Type: AWS::S3::Bucket
    Properties:
      LifecycleConfiguration:
        Rules:
          - Status: Enabled
            ExpirationInDays: 1

  # NOTE: After creating this stack, you must visit
  # https://console.aws.amazon.com/codesuite/settings/connections
  # in your browser to finalize the connection to GitHub.
  # See https://docs.aws.amazon.com/dtconsole/latest/userguide/connections-update.html
  # for more information.
  GitHubConnection:
    Type: 'AWS::CodeStarConnections::Connection'
    Properties:
      ConnectionName: GitHub
      ProviderType: GitHub

  ImageRepo:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: nodejs-demoapp

  Arm64BuildLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 14

  X86BuildLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 14

  ManifestBuilderLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 14

  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                codebuild.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: CodeBuild
          PolicyDocument:
              Version: 2012-10-17
              Statement:
                - Effect: Allow
                  Action:
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                  Resource:
                    - !GetAtt Arm64BuildLogGroup.Arn
                    - !GetAtt X86BuildLogGroup.Arn
                    - !GetAtt ManifestBuilderLogGroup.Arn
                - Effect: Allow
                  Action:
                    - s3:GetObject*
                    - s3:PutObject*
                  Resource:
                    - !Sub "${ArtifactBucket.Arn}/*"
                - Effect: Allow
                  Action:
                    - codestar-connections:UseConnection
                  Resource:
                    - !Ref GitHubConnection
                - Effect: Allow
                  Action:
                    - ecr:BatchGetImage
                    - ecr:BatchCheckLayerAvailability
                    - ecr:CompleteLayerUpload
                    - ecr:GetDownloadUrlForLayer
                    - ecr:InitiateLayerUpload
                    - ecr:PutImage
                    - ecr:UploadLayerPart
                  Resource:
                    - !GetAtt ImageRepo.Arn
                - Effect: Allow
                  Action:
                    - ecr:GetAuthorizationToken
                  Resource:
                    - "*"

  Arm64CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Environment:
        Type: ARM_CONTAINER
        Image: aws/codebuild/amazonlinux2-aarch64-standard:2.0
        ComputeType: BUILD_GENERAL1_SMALL
        PrivilegedMode: true
        EnvironmentVariables:
          - Name: IMAGE_REG
            Value: !Select [0, !Split [ "/", !GetAtt ImageRepo.RepositoryUri ]]
          - Name: IMAGE_SUFFIX
            Value: arm64
      ServiceRole: !Ref CodeBuildRole
      Source:
        Type: CODEPIPELINE
      Artifacts:
        Type: CODEPIPELINE
      LogsConfig:
        CloudWatchLogs:
          Status: ENABLED
          GroupName: !Ref Arm64BuildLogGroup

  X86CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Environment:
        Type: LINUX_CONTAINER
        Image: aws/codebuild/amazonlinux2-x86_64-standard:4.0
        ComputeType: BUILD_GENERAL1_SMALL
        PrivilegedMode: true
        EnvironmentVariables:
          - Name: IMAGE_REG
            Value: !Select [0, !Split [ "/", !GetAtt ImageRepo.RepositoryUri ]]
          - Name: IMAGE_SUFFIX
            Value: x86
      ServiceRole: !Ref CodeBuildRole
      Source:
        Type: CODEPIPELINE
      Artifacts:
        Type: CODEPIPELINE
      LogsConfig:
        CloudWatchLogs:
          Status: ENABLED
          GroupName: !Ref X86BuildLogGroup

  ManifestBuilder:
    Type: AWS::CodeBuild::Project
    Properties:
      Environment:
        Type: ARM_CONTAINER
        Image: aws/codebuild/amazonlinux2-aarch64-standard:2.0
        ComputeType: BUILD_GENERAL1_SMALL
        PrivilegedMode: true
        EnvironmentVariables:
          - Name: IMAGE_REG
            Value: !Select [0, !Split [ "/", !GetAtt ImageRepo.RepositoryUri ]]
          - Name: IMAGE_SUFFIXES
            Value: 'x86 arm64'
      ServiceRole: !Ref CodeBuildRole
      Source:
        Type: CODEPIPELINE
        BuildSpec: |-
          version: 0.2
          env:
            shell: bash
          phases:
            pre_build:
              commands:
                aws ecr get-login-password | docker login -u AWS --password-stdin $IMAGE_REG
            build:
              on-failure: ABORT
              commands:
                - make multiarch-manifest
      Artifacts:
        Type: CODEPIPELINE
      LogsConfig:
        CloudWatchLogs:
          Status: ENABLED
          GroupName: !Ref ManifestBuilderLogGroup

  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                codepipeline.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
      - PolicyName: CodeBuild
        PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - codebuild:BatchGetBuilds
                  - codebuild:StartBuild
                Resource:
                  - !GetAtt Arm64CodeBuildProject.Arn
                  - !GetAtt X86CodeBuildProject.Arn
              - Effect: Allow
                Action:
                  - codestar-connections:UseConnection
                Resource:
                  - !Ref GitHubConnection
              - Effect: Allow
                Action:
                  - s3:GetObject*
                  - s3:PutObject*
                Resource:
                  - !Sub "${ArtifactBucket.Arn}/*"

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location: !Ref ArtifactBucket
        Type: S3
      RoleArn: !GetAtt PipelineRole.Arn
      Stages:
        - Name: GitHub
          Actions:
            - Name: PushToMaster
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeStarSourceConnection
                Version: '1'
              InputArtifacts: []
              OutputArtifacts:
                - Name: Source
              Configuration:
                ConnectionArn: !Ref GitHubConnection
                FullRepositoryId: otterley/nodejs-demoapp
                BranchName: master
                OutputArtifactFormat: CODEBUILD_CLONE_REF
        - Name: BuildImage
          Actions:
          - Name: BuildArm64Image
            ActionTypeId:
              Category: Build
              Owner: AWS
              Provider: CodeBuild
              Version: '1'
            Configuration:
              ProjectName: !Ref Arm64CodeBuildProject
              PrimarySource: Source
            InputArtifacts:
              - Name: Source
          - Name: BuildX86Image
            ActionTypeId:
              Category: Build
              Owner: AWS
              Provider: CodeBuild
              Version: '1'
            Configuration:
              ProjectName: !Ref X86CodeBuildProject
              PrimarySource: Source
            InputArtifacts:
              - Name: Source
        - Name: MultiarchManifest
          Actions:
          - Name: MultiarchManifest
            ActionTypeId:
              Category: Build
              Owner: AWS
              Provider: CodeBuild
              Version: '1'
            Configuration:
              ProjectName: !Ref ManifestBuilder
              PrimarySource: Source
            InputArtifacts:
              - Name: Source